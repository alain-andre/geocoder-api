log_format timed_combined '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_time $upstream_response_time';

server {
  send_timeout 600s;

  access_log /dev/sdtout timed_combined;
  error_log /dev/stderr;

  client_max_body_size 50M;

  listen 80;
  server_name localhost;
  root /srv/app/public;

  # The following deploys your Ruby/Python/Node.js/Meteor app on Passenger.

  # Not familiar with Passenger, and used (G)Unicorn/Thin/Puma/pure Node before?
  # Yes, this is all you need to deploy on Passenger! All the reverse proxying,
  # socket setup, process management, etc are all taken care automatically for
  # you! Learn more at https://www.phusionpassenger.com/.
  passenger_enabled on;
  passenger_user app;
  passenger_app_root /srv/app;

  # If this is a Ruby app, specify a Ruby version:
  passenger_ruby /usr/bin/ruby2.5;

  location / {
    # cleanup received headers from passenger app (requires libnginx-mod-http-headers-more-filter)
    more_clear_headers 'Access-Control-*';

    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'DELETE, GET, HEAD, PATCH, POST, PUT' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Expose-Headers' 'Cache-Control, Content-Encoding, Content-Type' always;
      add_header 'Access-Control-Allow-Headers' 'DNT, X-CustomHeader, Keep-Alive, User-Agent, X-Requested-With, If-Modified-Since, Cache-Control, Origin, Content-Encoding, Content-Type, Accept' always;
      add_header 'Access-Control-Max-Age' 1728000 always;
      add_header 'Content-Type' 'text/plain' always;
      add_header 'Content-Length' '0' always;

      return 204;
    }

    if ($http_origin = '') {
      # Backend seems to add Access-Control-Allow-Origin and Access-Control-Expose-Headers when Origin is passed
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Expose-Headers' 'Cache-Control, Content-Encoding, Content-Type' always;
    }

    add_header 'Access-Control-Allow-Credentials' 'true' always;
  }
}
